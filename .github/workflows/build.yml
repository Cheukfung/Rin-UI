name: Build & Release RinUI Gallery

on:
  push:
    tags:
      - '*'
  workflow_dispatch:

permissions:
  contents: write

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: 📦 Install dependencies
        run: |
          python -m venv .venv
          .venv\Scripts\pip install -r requirements.txt
          .venv\Scripts\pip install pyinstaller

      - name: 🔨 Build Gallery (Windows)
        run: |
          .venv\Scripts\pyinstaller.exe --noconsole --icon=examples/assets/gallery.ico `
            --add-data="RinUI;RinUI" `
            --add-data="examples/assets;assets" `
            --add-data="examples/components;components" `
            --add-data="examples/languages;languages" `
            --add-data="examples/pages;pages" `
            --add-data="examples/gallery.qml;." `
            --paths=. `
            --contents-directory='.' `
            --name=RinUIGallery `
            examples/gallery.py

      - name: 📦 Zip build
        run: |
          powershell Compress-Archive -Path dist/RinUIGallery/* -DestinationPath dist/RinUIGallery-Windows.zip

      - name: ☁️ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: RinUIGallery-Windows
          path: dist/RinUIGallery-Windows.zip

  build-macos:
    runs-on: macos-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.8'

      - name: 📦 Install dependencies
        run: |
          python3 -m venv .venv
          . .venv/bin/activate
          pip install -r requirements.txt
          pip install pyinstaller

      - name: 🔨 Build Gallery (macOS)
        run: |
          .venv/bin/pyinstaller --noconsole --icon=examples/assets/gallery.icns \
            --add-data="RinUI:RinUI" \
            --add-data="examples/assets:assets" \
            --add-data="examples/components:components" \
            --add-data="examples/languages:languages" \
            --add-data="examples/pages:pages" \
            --add-data="examples/gallery.qml:." \
            --paths=. \
            --contents-directory='.' \
            --name=RinUIGallery \
            examples/gallery.py

      - name: 📦 Zip build
        run: |
          cd dist
          ditto -c -k --sequesterRsrc --keepParent RinUIGallery.app RinUIGallery-macOS.zip

      - name: ☁️ Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: RinUIGallery-macOS
          path: dist/RinUIGallery-macOS.zip

  release:
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest

    steps:
      - name: ⬇️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: ⬇️ Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: 📁 Show downloaded structure (debug)
        run: ls -R dist/

      - name: 🗃 Move release files to root dist/
        run: |
          mv dist/RinUIGallery-Windows/*.zip dist/
          mv dist/RinUIGallery-macOS/*.zip dist/

      - name: 🧱 Set up git-cliff
        uses: kenji-miyake/setup-git-cliff@v1

      - name: 📜 Generate CHANGELOG.md
        run: |
          git cliff --tag "${{ github.ref_name }}" --config-path .git-cliff.toml > CHANGELOG.md

      - name: 🚀 Create GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          name: RinUI Gallery ${{ github.ref_name }}
          tag_name: ${{ github.ref_name }}
          body_path: CHANGELOG.md
          files: |
            dist/RinUIGallery-Windows.zip
            dist/RinUIGallery-macOS.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
